name: tbls doc gen

on:
  push:
    branches:
      - main
  workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: tbls_database
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: rootpassword
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Wait for MySQL to be ready
      run: |
        until mysqladmin ping --host=127.0.0.1 --user=user --password=password --silent; do
          sleep 1
        done

    - name: Create tables
      run: |
        mysql --host=127.0.0.1 --user=user --password=password tbls_database < sql/schema.sql

    - name: Set up tbls
      uses: k1low/setup-tbls@v1

    - name: Generate docs
      run: |
        tbls doc

    - name: Commit and Push generated docs
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git checkout -b update/generated-docs
        git add docs
        git commit -m 'Update generated docs'
        git push origin update/generated-docs

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Update generated docs
        branch: update/generated-docs
        title: Update generated docs
        body: This PR updates the generated docs.

  #   - name: Upload artifact
  #     uses: actions/upload-pages-artifact@v3
  #     with:
  #       path: ./docs

  # deploy: 
  #   needs: build

  #   permissions:
  #     pages: write
  #     id-token: write

  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
